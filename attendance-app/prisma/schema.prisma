generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String             @id @default(cuid())
  name             String
  email            String             @unique
  password         String
  birthDay         DateTime
  photoPath        String?
  gender           Gender
  phone            String?
  lineId           String?
  cacaoTalkId      String?
  role             Role
  createdAt        DateTime           @default(now())
  attendance       Attendance[]       @relation("Checker")
  assignedChildren Child[]            @relation("AdminChildren")
  children         Child[]            @relation("ManagedChildren")
  groups           UserGroup[]
  organizations    UserOrganization[]
}

model Child {
  id              String       @id @default(cuid())
  name            String
  birthDay        DateTime
  photoPath       String
  gender          Gender
  phone           String?
  lineId          String?
  cacaoTalkId     String?
  managerId       String
  assignedAdminId String?
  createdAt       DateTime     @default(now())
  attendance      Attendance[]
  assignedAdmin   User?        @relation("AdminChildren", fields: [assignedAdminId], references: [id])
  manager         User         @relation("ManagedChildren", fields: [managerId], references: [id])
}

model Attendance {
  id          String   @id @default(cuid())
  childId     String
  checkedById String
  date        DateTime
  createdAt   DateTime @default(now())
  checkedBy   User     @relation("Checker", fields: [checkedById], references: [id])
  child       Child    @relation(fields: [childId], references: [id])
}

model Organization {
  id        String             @id @default(cuid())
  name      String
  createdAt DateTime           @default(now())
  groups    Group[]
  users     UserOrganization[]
}

model Group {
  id             String       @id @default(cuid())
  name           String
  organizationId String
  createdAt      DateTime     @default(now())
  organization   Organization @relation(fields: [organizationId], references: [id])
  users          UserGroup[]
}

model UserOrganization {
  userId         String
  organizationId String
  assignedAt     DateTime     @default(now())
  organization   Organization @relation(fields: [organizationId], references: [id])
  user           User         @relation(fields: [userId], references: [id])

  @@id([userId, organizationId])
}

model UserGroup {
  userId     String
  groupId    String
  assignedAt DateTime @default(now())
  group      Group    @relation(fields: [groupId], references: [id])
  user       User     @relation(fields: [userId], references: [id])

  @@id([userId, groupId])
}

enum Role {
  master
  superAdmin
  admin
  child
}

enum Gender {
  male
  female
}
